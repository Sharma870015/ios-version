{"version":3,"file":"static/js/563.a0ac983e.chunk.js","mappings":"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","sources":["components/ForgotPasswordModal.js","components/LoginPage.js"],"sourcesContent":["// ForgotPasswordModal.js\nimport React from 'react';\nimport './ForgotPasswordModal.css'; // Add styles for the modal\n\nconst ForgotPasswordModal = ({ isOpen, onClose }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Forgot Password</h2>\n        <p>It looks like you didn't forget your password. If you need help with your account, please contact support.</p>\n        <button onClick={onClose} className=\"close-button\">Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordModal;\n","import React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ForgotPasswordModal from './ForgotPasswordModal';\nimport './LoginPage.css';\n\nconst LoginPage = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const navigate = useNavigate();\n  const usernameInputRef = useRef(null);\n\n  // Validate username\n  const validateUsername = (username) => {\n    const usernameRegex = /^[a-zA-Z0-9_]{3,15}$/;\n    return usernameRegex.test(username);\n  };\n\n  // Validate password\n  const validatePassword = (password) => {\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,20}$/;\n    return passwordRegex.test(password);\n  };\n\n  const handleContinue = () => {\n    let isValid = true;\n\n    if (!username || !validateUsername(username)) {\n      setUsernameError('Username must be 3-15 characters long and can only contain alphanumeric characters and underscores');\n      isValid = false;\n    } else {\n      setUsernameError('');\n    }\n\n    if (!password) {\n      setPasswordError('Please enter your password');\n      isValid = false;\n    } else if (!validatePassword(password)) {\n      setPasswordError('Password must be 6-20 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character');\n      isValid = false;\n    } else {\n      setPasswordError('');\n    }\n\n    if (isValid) {\n      localStorage.setItem('username', username);\n      navigate('/todos', { state: { username } });\n    }\n  };\n\n  const handleUsernameChange = (e) => {\n    const value = e.target.value;\n    setUsername(value);\n    setUsernameError('');\n    if (!validateUsername(value) && value !== '') {\n      setUsernameError('Username must be 3-15 characters long and can only contain alphanumeric characters and underscores');\n    } else {\n      setUsernameError('');\n    }\n  };\n\n  const handlePasswordChange = (e) => {\n    const value = e.target.value;\n    setPassword(value);\n    setPasswordError('');\n    if (!validatePassword(value) && value !== '') {\n      setPasswordError('Password must be 6-20 characters long and include at least one uppercase letter, one lowercase letter, one number, and one special character');\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const handleForgotPassword = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleFocus = (e) => {\n    if (e.target.id === 'username') {\n      setUsernameError('');\n    } else if (e.target.id === 'password') {\n      setPasswordError('');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"welcome-section\">\n        <h1>Welcome to TaskMaster</h1>\n        <p>Manage your tasks efficiently and effortlessly with our intuitive application.</p>\n      </div>\n      <div className=\"login-box\">\n        <h2 className='for-Login'>TaskMaster</h2>\n        <form onSubmit={(e) => { e.preventDefault(); handleContinue(); }}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username:</label>\n            <input \n              className='for-padding'\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"Enter your username\"\n              value={username}\n              onChange={handleUsernameChange}\n              onFocus={handleFocus}\n              required\n            />\n            {usernameError && <p className=\"error-message\">{usernameError}</p>}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input \n              className='for-padding'\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={handlePasswordChange}\n              onFocus={handleFocus}\n              required\n            />\n            {passwordError && <p className=\"error-message\">{passwordError}</p>}\n          </div>\n          <button type=\"submit\" className=\"login-button\" disabled={usernameError || passwordError}>\n            Continue\n          </button>\n        </form>\n        <button onClick={handleForgotPassword} className=\"forgot-password-button\">\n          Forgot Password?\n        </button>\n      </div>\n      <ForgotPasswordModal isOpen={isModalOpen} onClose={closeModal} />\n      <div className=\"quote-section\">\n        <h3>Stay organized, stay productive</h3>\n        <p>\"The secret of getting ahead is getting started.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_ref","isOpen","onClose","_jsx","className","children","_jsxs","onClick","LoginPage","username","setUsername","useState","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","isModalOpen","setIsModalOpen","navigate","useNavigate","validateUsername","useRef","test","validatePassword","handleFocus","e","target","id","onSubmit","preventDefault","handleContinue","isValid","localStorage","setItem","state","htmlFor","type","placeholder","value","onChange","onFocus","required","disabled","handleForgotPassword","ForgotPasswordModal","closeModal"],"sourceRoot":""}